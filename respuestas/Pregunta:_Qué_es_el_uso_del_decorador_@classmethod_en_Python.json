{
  "question": "Pregunta: ¿Qué es el uso del decorador @classmethod en Python?",
  "answer": "\nEl decorador `@classmethod` es un símbolo especial en Python que se utiliza para definir una función como método de clase. Cuando una función se define con el decorador `@classmethod`, se convierte en una función de clase, lo cual significa que la función accede al objeto de la clase (instancia) a través del atributo `self`.\n\nEl decorador `@classmethod` se utiliza para definir funciones que no necesitan el objeto de la clase (instancia) y solo trabajan con el objeto de clase como tal. Estas funciones no necesitan el uso de `self`.\n\nPor ejemplo, considera la siguiente clase:\n```python\nclass MyClass:\n    @classmethod\n    def my_method(cls):\n        print(\"This is a class method\")\n```\nEn este caso, la función `my_method()` es una función de clase, lo cual significa que accede al objeto de clase (instancia) a través del atributo `cls`. La función no necesita el uso de `self` y se puede invocar directamente en la instancia de la clase sin referirse a ella:\n```python\nmy_instance = MyClass()\nMyClass.my_method()  # Output: \"This is a class method\"\n```"
}