{
  "question": "Explica la diferencia entre módulos y paquetes en Python. Proporciona un ejemplo de cómo se crea un paquete.",
  "answer": "\nMódulos y paquetes son dos tipos de organización de código en Python. La diferencia entre ellos es que los módulos son unidades de código más pequeñas que se pueden importar individualmente, mientras que los paquetes son una forma de agrupar módulos relacionados entre sí.\n\nA continuación, te proporciono un ejemplo de cómo se crea un paquete:\n\n1. Primero, necesitas crear una carpeta con el nombre del paquete y dentro de ella crear un archivo llamado `__init__.py`. Este archivo es el punto de entrada de nuestro paquete y contiene la definición de las variables, clases y funciones que se exportarán al exterior.\n```python\n# mi_paquete/__init__.py\n\ndef sumar(a, b):\n    return a + b\n\ndef restar(a, b):\n    return a - b\n```\n1. A continuación, puedes crear otros archivos dentro de la misma carpeta con funciones o clases que necesites utilizar dentro del paquete. Por ejemplo:\n```python\n# mi_paquete/operaciones.py\n\ndef sumar(a, b):\n    return a + b\n\ndef restar(a, b):\n    return a - b\n```\n1. Para utilizar el paquete en otro archivo de tu código, debes importarlo. Podrías hacerlo directamente o mediante un alias:\n```python\n# mi_programa.py\nfrom mi_paquete import sumar, restar\n\nresultado = sumar(2, 3)\nprint(resultado)  # Output: 5\n```"
}