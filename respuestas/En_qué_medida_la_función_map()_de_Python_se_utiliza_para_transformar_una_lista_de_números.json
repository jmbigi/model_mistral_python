{
  "question": "¿En qué medida la función map() de Python se utiliza para transformar una lista de números?",
  "answer": "La función map() de Python se utiliza para transformar una lista de números en otra lista donde cada elemento ha sido aplicado una función. La sintaxis es la siguiente:\n\nmap(función, lista)\n\nDonde \"lista\" es la lista de números que se va a transformar y \"función\" es la función que se va a aplicar a cada elemento de la lista. La función map() devuelve una nueva lista con los resultados de la aplicación de la función a cada elemento de la lista original.\n\nPor ejemplo, si tienes una lista de números [1, 2, 3, 4] y quieres multiplicar cada elemento por 2, podrías usar map() como sigue:\n\nnumeros = [1, 2, 3, 4]\nresultados = list(map(lambda x: x * 2, numeros))\n\nLa variable \"resultados\" ahora contiene la lista [2, 4, 6, 8]. En este ejemplo, se usó una lambda function para multiplicar cada elemento de la lista por 2.\n\nOtro ejemplo, si tienes una lista de números y quieres convertirlos a mayúscula, podrías usar map() como sigue:\n\nnumeros = [1, 2, 3, 4]\nresultados = list(map(lambda x: x.upper(), numeros))\n\nLa variable \"resultados\" ahora contiene la lista ['1', '2', '3', '4']. En este ejemplo, se usó una lambda function para convertir cada elemento de la lista a mayúscula.\n\nEn general, map() es una muy útil función cuando quieres transformar una lista de datos en otra lista donde cada elemento ha sido aplicado una función específica."
}