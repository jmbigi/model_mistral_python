{
  "question": "Explica la diferencia entre módulos y paquetes en Python. Proporciona un ejemplo de cómo se crea un paquete.",
  "answer": "\nEn Python, módulos y paquetes son dos tipos de archivos que se utilizan para organizar código en un proyecto. Ambas cosas son similares en cuanto a su función, pero hay algunas diferencias entre ellas.\n\nUn módulo es una sola unidad de código que contiene funciones y variables, pero no tiene ningún tipo de estructura particular. Módulos se crean y guardan como archivos con la extensión \".py\". Se pueden importar en otros programas de Python utilizando su nombre.\n\nPor otro lado, un paquete es una colección de módulos que comparten un espacio de nombres común. Paquetes se crean y guardan como directorios con el nombre del paquete (generalmente en la forma `paquete`) y dentro de este directorio se encuentran los módulos con el nombre de la función o variable que contienen, sin el nombre del paquete. Paquetes también se pueden importar en otros programas de Python, pero se deben hacerlo utilizando su nombre de paquete y el punto (.) separador, por ejemplo `paquete.nombre_de_la_funcion()`.\n\nCrear un paquete en Python es muy simple, solo necesita crear un directorio con el nombre del paquete y dentro de este directorio se pueden crear los módulos que compondrán el paquete. El nombre del paquete debe ser un nombre valido para Python (sin espacios ni caracteres especiales) y los nombres de los módulos deben ser descriptivos y significativos.\n\nPor ejemplo, supongamos que queremos crear un paquete llamado \"my\\_package\" con dos módulos: \"módulo1\" y \"módulo2\". Para hacer esto, necesitamos crear una carpeta llamada \"my\\_package\" en nuestro directorio de trabajo y dentro de ella se pueden crear dos archivos llamados \"módulo1.py\" y \"módulo2.py\". Estos dos archivos contendrán el código para cada uno de los módulos.\n\nAhora podemos importar el paquete en nuestros programas de Python utilizando su nombre de paquete y el punto (.) separador. Por ejemplo:\n```python\nfrom my_package import módulo1, módulo2\n```"
}