{
  "question": "Explica la diferencia entre módulos y paquetes en Python. Proporciona un ejemplo de cómo se crea un paquete.",
  "answer": "En Python, los módulos y los paquetes son dos tipos de unidades organizadas de código.\n\nUn módulo es una unidad de código que puede ser importada en otro programa o script. Es una forma de organizar el código de manera modular para evitar redundancia, y para facilitar el reutilizzo del código. Un módulo no suele tener ningún tipo de estructura particular y su contenido se importa usando la palabra clave `import`.\n\nUn paquete, en cambio, es una unidad de código que contiene varios módulos organizados dentro de una estructura de subdirectorios. En Python, los paquetes se crean con el uso del comando `importlib` y su contenido se accede mediante la notación de punto.\n\nUn ejemplo de cómo se crea un paquete en Python es:\n```python\n# mi_paquete/__init__.py\nfrom .submodule1 import submod1_func\nfrom .submodule2 import submod2_func\n\n# mi_paquete/submodule1.py\ndef submod1_func():\n    print(\"Este es el funcionamiento de submodule1\")\n\n# mi_paquete/submodule2.py\ndef submod2_func():\n    print(\"Este es el funcionamiento de submodule2\")\n```\nEn este ejemplo, se crea un paquete llamado `mi_paquete`, que contiene dos módulos: `submodule1` y `submodule2`. El código se guarda en dos archivos diferentes, pero ambos se encuentran dentro del mismo directorio. El archivo `__init__.py` es el principal archivo del paquete y se utiliza para importar los módulos de forma global.\n\nPara usar el código de este paquete en otro programa o script, podemos acceder al funcionamiento de cada módulo utilizando la notación de punto:\n```python\nfrom mi_paquete import submod1_func\nfrom mi_paquete import submod2_func\n\nsubmod1_func()\nsubmod2_func()\n```"
}