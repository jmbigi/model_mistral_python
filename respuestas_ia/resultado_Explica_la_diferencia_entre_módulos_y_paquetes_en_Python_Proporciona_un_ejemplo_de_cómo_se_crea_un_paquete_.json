{
  "question": "Explica la diferencia entre módulos y paquetes en Python. Proporciona un ejemplo de cómo se crea un paquete.",
  "answer": "\nEn Python, módulos y paquetes son dos tipos de archivos que se utilizan para organizar código. Módulos son archivos que contienen funciones, clases o variables que pueden ser importados en otros programas, mientras que paquetes son módulos que están dentro de una carpeta con el mismo nombre.\n\nLa principal diferencia entre módulos y paquetes es que los módulos no tienen un namespace, por lo que las funciones y variables que se definen en ellos no pueden ser importadas de manera exclusiva por otro programa. En cambio, los paquetes tienen un namespace, por lo que los elementos que se definen dentro de ellas solo pueden ser importados por programas que se encuentren dentro de la misma carpeta o subcarpetas.\n\nPor ejemplo, si queremos crear un paquete llamado \"mis\\_paquete\" con una función llamada \"hola\", debemos crear una carpeta llamada \"mis\\_paquete\" y dentro de ella un archivo llamado \"\\_init\\_.py\". En este último archivo, podríamos definir nuestra función:\n```python\ndef hola():\n    print(\"Hola, mundo!\")\n```\nLuego, podemos importar nuestra función en otro programa de la siguiente manera:\n```python\nfrom mis_paquete import hola\nhola()  # Output: Hola, mundo!\n```\nEn este caso, \"mis\\_paquete\" es el nombre del paquete y \"\\_init\\_.py\" es el nombre de la función principal. El uso de un namespace en los paquetes evita conflictos con otras funciones o variables que se definen con el mismo nombre.",
  "score": 1.0
}