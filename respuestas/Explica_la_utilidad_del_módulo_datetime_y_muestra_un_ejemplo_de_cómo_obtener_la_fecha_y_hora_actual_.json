{
  "question": "Explica la utilidad del módulo datetime y muestra un ejemplo de cómo obtener la fecha y hora actual.",
  "answer": "\nEl módulo datetime de Python es una biblioteca de utilidades que permite trabajar con fechas y horas de manera fácil. Es útil cuando se necesita manipular fechas y horas en un programa, como para calcular diferencias de tiempo o para guardar datos con fechas asociadas.\n\nEl módulo datetime ofrece una gran variedad de funciones y métodos que permiten trabajar con fechas y horas de manera flexible y eficiente. Algunas de las principales funciones del módulo datetime son:\n\n* `datetime.now()`: Retorna la fecha y hora actual de la máquina.\n* `datetime.today()`: Retorna la fecha actual sin la hora.\n* `datetime.strptime(string, format)`: Convierte una cadena de texto en un objeto datetime según el formato proporcionado.\n* `datetime.fromisoformat(s)`: Convierte una cadena de texto en un objeto datetime según el formato ISO 8601.\n* `datetime.fromtimestamp(t)`: Convierte un número de segundos desde la epoch (el 1 de enero de 1970 a las 00:00:00 UTC) en un objeto datetime.\n\nA continuación hay un ejemplo de cómo utilizar el módulo datetime para obtener la fecha y hora actual de la máquina:\n```python\nfrom datetime import datetime\n\n# Obtener la fecha y hora actual\nnow = datetime.now()\n\n# Extractar la fecha\nfecha = now.strftime('%Y-%m-%d')\n\n# Extractar la hora\nhora = now.strftime('%H:%M:%S')\n\nprint(f\"Fecha y hora actual: {fecha}, {hora}\")\n```\nEste ejemplo utiliza el método `datetime.now()` para obtener la fecha y hora actual de la máquina. Luego, utiliza los métodos `strftime()` para extraer la fecha y la hora en diferentes formatos. Finalmente, imprime la fecha y la hora en el formato deseado (YYYY-MM-DD y HH:MM:SS)."
}