{
  "question": "Explica la diferencia entre módulos y paquetes en Python. Proporciona un ejemplo de cómo se crea un paquete.",
  "answer": "\nEn Python, módulos y paquetes son dos tipos de archivos que se utilizan para organizar el código. Módulos son archivos .py o .pyc que contienen funciones y variables que pueden ser importadas en otros archivos del mismo directorio o de un directorio inferior. Paquetes, por otro lado, son directorios que contienen módulos y subdirectorios y se utilizan para organizar el código de una aplicación más grande.\n\nLa principal diferencia entre los dos es que módulos son archivos .py o .pyc que pueden ser importados en otros archivos, mientras que paquetes son directorios que contienen módulos y subdirectorios. Un ejemplo de cómo se crea un paquete es:\n\n1. Crear una carpeta con el nombre del paquete, por ejemplo \"mipaquete\".\n2. Dentro de la carpeta, crear un archivo .py o .pyc llamado \"\\_\\_init\\_.py\" (con dos underscores).\n3. Dentro de este archivo, se puede agregar código para definir funciones y variables que serán accesibles desde otros módulos dentro del paquete.\n4. Crear otro archivo .py o .pyc dentro de la carpeta con el nombre deseado, por ejemplo \"mipaquete/mi\\_modulo\".\n5. Dentro de este archivo, se puede importar y utilizar las funciones y variables definidas en \"\\_\\_init\\_.py\".\n6. Para usar el paquete en otro archivo del mismo directorio o de un directorio inferior, se debe agregar la siguiente línea al principio del archivo: \"import mi\\_paquete\" (con los dos puntos).\n7. Luego, se puede importar y utilizar las funciones y variables definidas en \"\\_\\_init\\_.py\" de manera similar a como se hace con módulos."
}