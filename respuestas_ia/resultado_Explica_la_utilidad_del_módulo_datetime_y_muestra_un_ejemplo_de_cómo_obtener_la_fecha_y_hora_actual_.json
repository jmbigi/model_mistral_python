{
  "question": "Explica la utilidad del módulo datetime y muestra un ejemplo de cómo obtener la fecha y hora actual.",
  "answer": "\nEl módulo datetime en Python proporciona una forma sencilla de trabajar con fechas y horas. Se puede utilizar para obtener la fecha y hora actual, como también para manipular fechas y horas en un código. \n\nPara obtener la fecha y hora actual en Python, se puede utilizar el método `now()` del módulo datetime. Este método devuelve una instancia de la clase `datetime`, que contiene información sobre la fecha y hora actual. Por ejemplo:\n```python\nfrom datetime import datetime\n\n# Obtener la fecha y hora actual\nnow = datetime.now()\n\n# Obtener solo la fecha\nfecha = now.strftime('%Y-%m-%d')\n\n# Obtener solo la hora\nhora = now.strftime('%H:%M:%S')\n```\nEn el ejemplo anterior, se utiliza la función `strftime()` para formatear la fecha y hora en una cadena de texto. La función `strftime()` acepta varios parámetros que permiten especificar el formato de la fecha y hora. En este caso, se utilizan los parámetros `%Y`, `%m`, `%d` para obtener la fecha en el formato `YYYY-MM-DD`, y los parámetros `%H`, `%M`, `%S` para obtener la hora en el formato `HH:MM:SS`.\n\nLa utilidad del módulo datetime en Python es enorme, ya que permite trabajar con fechas y horas de una manera sencilla y eficiente. Se puede utilizar para calcular diferencias entre fechas, para generar fechas en el futuro o pasado, y para manipular fechas en código.",
  "score": 1.0
}