{
  "question": "¿Cómo se utiliza el concepto de herencia en Python?",
  "answer": "\nHerencia es un concepto en programación de objetos que permite crear nuevos tipos de objetos basados en otros tipos de objetos existentes. Los nuevos tipos de objetos heredan las características y métodos de los tipos de objetos originales, pero también pueden tener sus propias características y métodos adicionales o modificaciones de los heredados.\n\nEn Python, la herencia se implementa mediante la palabra clave `class` y el uso del símbolo `<class \"tipo_objeto\">`. Los nuevos tipos de objetos se crean en base a los tipos de objetos originales al usar la palabra clave `super()` para acceder a los métodos heredados.\n\nPor ejemplo, considera la siguiente clase `Vehículo`, que tiene un método `cambiar_marca`:\n```python\nclass Vehículo:\n    def __init__(self):\n        self.marca = \"Toyota\"\n        \n    def cambiar_marca(self, nueva_marca):\n        self.marca = nueva_marca\n        \nv1 = Vehículo()\nprint(v1.marca)  # Toyota\n```\nPuede crearse una clase `Coche`, que sea un subtipo de `Vehículo`, y tener su propio método `cambiar_color`. El método `cambiar_color` de la clase `Coche` se invoca a través del objeto `self.super().cambiar_marca()`:\n```python\nclass Coche(Vehículo):\n    def __init__(self, color):\n        super().__init__()\n        self.color = color\n        \n    def cambiar_marca(self, nueva_marca):\n        super().cambiar_marca(nueva_marca)\n        \n    def cambiar_color(self, nueva_color):\n        self.color = nueva_color\n```\nPuede crear un objeto `coche1` de la clase `Coche`, y sus métodos se invocan a través de los puntos:\n```python\ncoche1 = Coche(\"Rojo\")\nprint(coche1.marca)  # Toyota\ncoche1.cambiar_marca(\"Honda\")\nprint(coche1.marca)  # Honda\ncoche1.cambiar_color(\"Azul\")\nprint(coche1.color)  # Azul\n```\nLa clase `Coche` hereda los métodos `__init__`, `cambiar_marca` y `cambiar_color` del objeto `Vehículo`. También puede tener sus propias características y métodos adicionales, como el método `cambiar_velocidad`."
}